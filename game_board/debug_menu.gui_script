local C = require "utils.message_ids"
local EVENT_REGISTRY = require "utils.event_regisrty"

local HIDE_MENU_BUTTON = "hide_menu"
local CHANGE_INCOME = "change_income"
local CHANGE_GLOBAL_PARAMS = "change_global_params"
local SPEND_ACTION = "spend_action"
local UPDATE_TR = "update_terraform_rating"
local SET_MAP_CLICKABLE = "set_map_clickable"
local CHANGE_MILESTONE = "change_milestone"

local function test_random_milestone()
	local num = math.random(1, 10)
	return (num == 1 and C.MILESTONE_TERRAFORMER)
	or (num == 2 and C.MILESTONE_MAYOR) 
	or (num == 3 and C.MILESTONE_GARDENER)
	or (num == 4 and C.MILESTONE_BUILDER)
	or (num == 5 and C.MILESTONE_PLANNER)
	or (num == 6 and C.AWARD_LANDLORD)
	or (num == 7 and C.AWARD_BANKER)
	or (num == 8 and C.AWARD_SCIENTIST)
	or (num == 9 and C.AWARD_THERMALIST)
	or (num == 10 and C.AWARD_MINER)
end

local function test_random_resource()
	local num = math.random(1, 6)
	return (num == 1 and C.RECOURCE_GOLD)
	or (num == 2 and C.RECOURCE_STEEL)
	or (num == 3 and C.RECOURCE_TITANIUM)
	or (num == 4 and C.RECOURCE_PLANT)
	or (num == 5 and C.RECOURCE_ELECTRICITY)
	or (num == 6 and C.RECOURCE_HEAT)
end

local function test_random_planet_param()
	local num = math.random(1, 3)
	return (num == 1 and C.PLANET_TEMPERATURE)
	or (num == 2 and C.PLANET_OXYGEN)
	or (num == 3 and C.PLANET_OCEANS)
end

local function test_random_color()
	local num = math.random(1, 4)
	return (num == 1 and C.PLAYER_1_COLOR)
	or (num == 2 and C.PLAYER_2_COLOR) 
	or (num == 3 and C.PLAYER_3_COLOR)
	or (num == 4 and C.PLAYER_4_COLOR)
end

local function is_enabled(button_name)
	return gui.is_enabled(gui.get_node(button_name .. "/button"))
end

local function hide_menu(self)
	self.show = not self.show
	for i, button_name in ipairs(self.buttons) do
		if not (button_name == "hide_menu") then
			gui.set_enabled(gui.get_node(button_name .. "/button"), self.show)
			gui.set_enabled(gui.get_node(button_name .. "/text"), self.show)
		end
	end
end

local function swap_map_clickable(self)
	self.map_clickable = not self.map_clickable
	msg.post("/hex_grid#hex_grid_controller", C.MAP_SET_CLICKABLE, { clickable = self.map_clickable } );
	gui.set_text(gui.get_node(SET_MAP_CLICKABLE .. "/text"), "map clickable " .. tostring(self.map_clickable))
end

function init(self)
	self.buttons = {
		HIDE_MENU_BUTTON,
		CHANGE_INCOME,
		CHANGE_GLOBAL_PARAMS,
		SPEND_ACTION,
		UPDATE_TR,
		SET_MAP_CLICKABLE,
		CHANGE_MILESTONE,
	}
	self.show = true
	self.map_clickable = true
end

function on_message(self, message_id, message, sender)

end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.pressed == true then
		for i, button_name in ipairs(self.buttons) do
			if gui.pick_node(gui.get_node(button_name .. "/button" ), action.x, action.y) then
				print("button pressed ", button_name)
				if button_name == HIDE_MENU_BUTTON then
					hide_menu(self)
				elseif is_enabled(button_name) then
					if button_name == CHANGE_INCOME then
						EVENT_REGISTRY.notify(C.PLAYER_RESOURCES_CHANGED, {
							income_change = {[test_random_resource()] = math.random(-1, 2)},
							current_change = {[test_random_resource()] = math.random(-1, 2)}
						});
					elseif button_name == CHANGE_GLOBAL_PARAMS then
						EVENT_REGISTRY.notify(C.INCREASE_PLANET_PARAMETER, { [test_random_planet_param()] = { times = math.random(1, 2) }} )
					elseif button_name == SPEND_ACTION then
						EVENT_REGISTRY.notify(C.PLAYER_SPEND_ACTION)
					elseif button_name == UPDATE_TR then
						EVENT_REGISTRY.notify(C.PLAYER_TERRAFORM_RATING, {player_id = math.random(5), terraform_rating = math.random(50)})
					elseif button_name == SET_MAP_CLICKABLE then
						swap_map_clickable(self)
					elseif button_name == CHANGE_MILESTONE then
						EVENT_REGISTRY.notify(C.TAKE_MILESTONE_OR_AWARD, { name = test_random_milestone() })
					end
				end
			end
		end
	end	
end