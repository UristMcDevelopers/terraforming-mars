local C = require "utils.message_ids"

function init(self)
	self.buttons = {C.PLAYER_SKIP_TURN, C.PLAYER_SPEND_ACTION}
	msg.post(".", "acquire_input_focus")
	self.round = 1
	self.player_list = { { end_his_round = false, avalibale_actions = {true, true} } }
	self.current_player_index = 1;
end

local function update_current_player_actions(self)
	local player = self.player_list[self.current_player_index]
	local player_actions = self.player_list[self.current_player_index]["avalibale_actions"]

	-- Player has only 2 actions per turn
	-- if player skips turn without doing at least 1 action, he will skip turns until next round
	if player_actions[1] == false and player_actions[2] == false then
		error("player played action but he doesn't have one")
	elseif player_actions[1] == false and player_actions[2] == true then
		self.player_list[self.current_player_index]["avalibale_actions"][2] = false
	else 
		self.player_list[self.current_player_index]["avalibale_actions"][1] = false
	end
end

local function reset_current_player_actions(self)
	self.player_list[self.current_player_index]["avalibale_actions"][1] = true
	self.player_list[self.current_player_index]["avalibale_actions"][2] = true
end

local function choose_next_player(self)
	self.current_player_index = self.current_player_index + 1
	local player = self.player_list[self.current_player_index]
	if player == nil then
		self.current_player_index = 1
	end
end

local function next_round(self)
	self.round = self.round + 1
	print("round " .. self.round)
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.pressed == true then
		for i, button_name in ipairs(self.buttons) do
			if gui.pick_node(gui.get_node(button_name .. "/button" ), action.x, action.y) then
				print("button pressed ", button_name)
				if button_name == (C.PLAYER_SPEND_ACTION) then
					msg.post("#top_bar", C.PLAYER_INCOME_CHANGED, {[C.RECOURCE_GOLD] = 2} );
					update_current_player_actions(self)
				elseif button_name == (C.PLAYER_SKIP_TURN) then
					reset_current_player_actions(self)
					choose_next_player(self)
					if self.current_player_index == 1 then
						next_round(self)
					end
				end
			end
		end
	end	
end

