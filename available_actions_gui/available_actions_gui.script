local UTILS = require("utils.helpers")
local C = require("utils.message_ids")
local EVENT_REGISTRY = require("utils.event_regisrty")
local GRID = require("utils.grid")

local DISPLAY_WIDTH = sys.get_config_int("display.width")
local DISPLAY_HEIGHT = sys.get_config_int("display.height")
local POS_TOP_LEFT_CARD = vmath.vector3(150, DISPLAY_HEIGHT - 300, 0.1)

local is_button_enabled = true
local grid = GRID.new()
grid:initial_position(POS_TOP_LEFT_CARD)
grid:set_factory_name("#factory")
grid:set_script_name("available_action")
grid:set_size(3, 4)
grid:set_padding_between(15)
grid:set_height_of_node(200)
grid:on_node_click(function (clicked_node) 
	EVENT_REGISTRY.notify(C.PLAYER_CHOSE_ACTION_TO_PLAY, clicked_node)
	grid:clear()
	is_button_enabled = true
end)


function init(self)
	msg.post(".", "acquire_input_focus")
	EVENT_REGISTRY.registry(C.UI_SHOW_ACTIONS_GRID, msg.url())
end

function on_message(self, message_id, message, sender)
	if message_id == hash(C.UI_SHOW_ACTIONS_GRID) then
		grid:spawn(message.actions)
		is_button_enabled = false
	end
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.pressed then
		if is_button_enabled and UTILS.is_sprite_picked("#sprite", action.x, action.y) then
			EVENT_REGISTRY.notify(C.UI_CLICK_AVAILABLE_ACTIONS)
			return true
		end

		grid:on_input(action.x, action.y)
	end
end

